free

settings.py @@@@@@@@@@@@@@222

""" Django settings for finalexam project.

Generated by 'django-admin startproject' using Django 2.0.7.

For more information on this file, see https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see https://docs.djangoproject.com/en/2.0/ref/settings/ """

import os
Build paths inside the project like this: os.path.join(BASE_DIR, ...)

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(file)))
Quick-start development settings - unsuitable for production
See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/
SECURITY WARNING: keep the secret key used in production secret!

SECRET_KEY = 'ntew287+%1k_i4qpa4obqlieb-ou(s!$+mne20$#%0si_#oq4o'
SECURITY WARNING: don't run with debug turned on in production!

DEBUG = True

ALLOWED_HOSTS = []
Application definition

INSTALLED_APPS = [ 'django.contrib.admin', 'django.contrib.auth', 'django.contrib.contenttypes', 'django.contrib.sessions', 'django.contrib.messages', 'django.contrib.staticfiles', 'finalexamapp1', ]

MIDDLEWARE = [ 'django.middleware.security.SecurityMiddleware', 'django.contrib.sessions.middleware.SessionMiddleware', 'django.middleware.common.CommonMiddleware', 'django.middleware.csrf.CsrfViewMiddleware', 'django.contrib.auth.middleware.AuthenticationMiddleware', 'django.contrib.messages.middleware.MessageMiddleware', 'django.middleware.clickjacking.XFrameOptionsMiddleware', ]

ROOT_URLCONF = 'finalexam.urls'

TEMPLATES = [ { 'BACKEND': 'django.template.backends.django.DjangoTemplates', 'DIRS': [], 'APP_DIRS': True, 'OPTIONS': { 'context_processors': [ 'django.template.context_processors.debug', 'django.template.context_processors.request', 'django.contrib.auth.context_processors.auth', 'django.contrib.messages.context_processors.messages', ], }, }, ]

WSGI_APPLICATION = 'finalexam.wsgi.application'
Database
https://docs.djangoproject.com/en/2.0/ref/settings/#databases

DATABASES = { 'default': { 'ENGINE': 'django.db.backends.sqlite3', 'NAME': os.path.join(BASE_DIR, 'db.sqlite3'), } }
Password validation
https://docs.djangoproject.com/en/2.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [ { 'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator', }, { 'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator', }, { 'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator', }, { 'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator', }, ]
Internationalization
https://docs.djangoproject.com/en/2.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True
Static files (CSS, JavaScript, Images)
https://docs.djangoproject.com/en/2.0/howto/static-files/

STATIC_URL = '/static/' MEDIA_URL = '/media/' STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles') MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

LOGIN_REDIRECT_URL = 'index' LOGIN_URL = 'login'

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend' EMAIL_HOST = 'smtp.gmail.com' EMAIL_PORT = 587 EMAIL_USE_TLS = True EMAIL_HOST_USER = 'maldanna432432@gmail.com' EMAIL_HOST_PASSWORD = 'ygmail@432432'

urls************88

from django.contrib import admin from django.urls import path,include from django.contrib.auth import views as auth_views from django.conf.urls.static import static from django.conf import settings

urlpatterns = [ path('admin/', admin.site.urls), path('aa/',include('finalexamapp1.urls')), ]

wsgi####################

""" WSGI config for finalexam project.

It exposes the WSGI callable as a module-level variable named application.

For more information on this file, see https://docs.djangoproject.com/en/2.0/howto/deployment/wsgi/ """

import os

from django.core.wsgi import get_wsgi_application

os.environ.setdefault("DJANGO_SETTINGS_MODULE", "finalexam.settings")

application = get_wsgi_application()

##############@@@@@@@@@@@@@@@@templates****************

examiner_home.html
{% load static %} <title> examiner! </title> {% load staticfiles %}
Online EXAMINATION

    Profile
    help

                    </ul>
                </div>
            </div>
        </nav>

    <div class="banner">
    <div class="bg-color">
        <div class="container">
            <div class="row">
                <div class="banner-text text-center">

                    <div class="intro-para text-center quote">
                        <a href= " {% url 'finalexamapp1:signup' %} "
                           class="btn btn-success btn-lg">Upload_paper</a>
                        <a href="#"
                           class="btn btn-success btn-lg">view-created-tests-by-you!</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

<div style="text-align: center">
    <footer id="footer" class="footer" style="padding: 17px 0">
        <div class="credits">
            Designed and Developed for <a href="#"><b> Sakkhar Saha</b></a><br>
        </div>
    </footer>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js" Async></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"
        Async integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa"
    crossorigin="anonymous"></script>
</div>

header.html@@@@@@@@@@@@@@2
{% load static %} <title> Top Free Online Tests - PRACTICE, ANALYZE & IMPROVE! </title> {% load staticfiles %}
Online EXAMINATION

    HOME
    ABOUT

                    </ul>
                </div>
            </div>
        </nav>
        {% block content %} {% endblock %}
    </div>
    <div style="text-align: center">
        <footer id="footer" class="footer" style="padding: 17px 0">
            <div class="credits">
                Designed and Developed for <a href="#"><b> Sakkhar Saha</b></a><br>
            </div>
        </footer>
    </div>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js" Async></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" Async integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa"
        crossorigin="anonymous"></script>

    index.html@@@@@@@@@@@@@@@@@

    {% extends "finalexamapp1/header.html" %} {% block content %}

PRACTICE, ANALYZE & IMPROVE!

Best Free Online Tests for You .. . . Start Now!

Boost your exam preparati on with free online test to crack the most popular competitive exams.
signup Login

{% endblock %}

login.html@@@@@@@@@@@@@@@@@

{% extends "finalexamapp1/header.html" %} {% block content %}
Log In {{ form }}
Login Forgot Password?
{% endblock content %}

logout.html@@@@@@@@@@@@@@@@@@@

{% extends "finalexamapp1/header.html" %} {% block content %}
You have been logged out
Log In Again
{% endblock content %}

@@password_reset.html

{% extends "finalexamapp1/header.html" %} {% block content %}
Reset Password {{ form }}
Request Password Reset
{% endblock content %}

@@@@@@@@@@@@@@@@@

password_reset_complete

{% extends "finalexamapp1/header.html" %} {% block content %}
Your password has been set.
Sign In Here {% endblock content %}

password_reset_confirm.html

{% extends "finalexamapp1/header.html" %} {% block content %}
Reset Password {{ form }}
Reset Password
{% endblock content %}

@@@@@@@@@@@@@@@@@@@@@

password_reset_done.html

{% extends "finalexamapp1/header.html" %} {% block content %}
An email has been sent with instructions to reset your password
{% endblock content %}

@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@

signup.html

{% extends "finalexamapp1/header.html" %} {% block content %}
{% csrf_token %}
Register for conducting a Test

            <div class="form-group">
                <input type="radio"
                        name="radio1"
                       value="student"


                     /> student
                <input type="radio"
                       name="radio1"
                       value="examiner"

                     /> examiner
            </div>








            <div class="form-group">
                <input type="password" id="password" class="form-control input-lg" name="pwd"
                       placeholder="Create a Password" required>
            </div>
            <div class="form-group">
                <input type="password" id="password_confirm" oninput="check(this)"
                       class="form-control input-lg" name="cpwd" placeholder="Confirm-Password"
                    required>
            </div>
        </div>
        <div class="col-md-4">
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <center>
                    <button class="btn btn-primary"><b style="font-size: larger">Sign Up</b></button>
                    <b>or</b>&nbsp;
                    <a href="#" class="btn btn-warning" type="submit">
                        <b style="font-size: larger">Sign In</b></a>
                </center>
            </div>
        </div>
        <div class="col-md-4">
        </div>
    </div>
</form>


<script language='javascript' type='text/javascript'> function check(input) { if (input.value != document.getElementById('password').value) { input.setCustomValidity('Password Must be Matching.'); } else { // input is valid -- reset the error message input.setCustomValidity(''); } } </script> {% endblock %}

@@@@@@@@@@@@@@@@@@@@@@ simple_upload.html

{% extends 'finalexamapp1/header.html' %}

{% load static %}

{% block content %}
{% csrf_token %} Upload

{% if uploaded_file_url %}

File uploaded at: {{ uploaded_file_url }}
{% endif %}

Return to home
{% endblock %}

@@@@@@@@@@@@@@@@@@

student_home.html
{% load static %} <title> examiner! </title> {% load staticfiles %}
Online EXAMINATION

    Profile
    help

                    </ul>
                </div>
            </div>
        </nav>

    <div class="banner">
    <div class="bg-color">
        <div class="container">
            <div class="row">
                <div class="banner-text text-center">

                    <div class="intro-para text-center quote">
                        <a href= " {% url 'finalexamapp1:signup' %} "
                           class="btn btn-success btn-lg">view-tests-list</a>
                    </div>
                </div>
            </div>
        </div>
    </div>

<div style="text-align: center">
    <footer id="footer" class="footer" style="padding: 17px 0">
        <div class="credits">
            Designed and Developed for <a href="#"><b> Sakkhar Saha</b></a><br>
        </div>
    </footer>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js" Async></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"
        Async integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa"
    crossorigin="anonymous"></script>
</div>

@@@@@@@@@@@@@@@@@@@

upload_question_paper.html

{% extends "finalexamapp1/header.html" %} {% block content %}
{% csrf_token %}
Test

required /> </div>

upload paper

            </div>

        </div>

        <div class="col-md-4">
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <center>
                    <button class="btn btn-primary">
                        <b style="font-size: larger">submit</b></button>
                </center>
            </div>
        </div>
        <div class="col-md-4">
        </div>
    </div>
</form>


<script language='javascript' type='text/javascript'> function check(input) { if (input.value != document.getElementById('password').value) { input.setCustomValidity('Password Must be Matching.'); } else { // input is valid -- reset the error message input.setCustomValidity(''); } } </script> {% endblock %}

@@@@@@@@@@@@@@@@@@@@

admin.py

from django.contrib import admin from .models import UserProfile,Questions1,Que_csv

admin.site.register(UserProfile) admin.site.register(Questions1) admin.site.register(Que_csv)
Register your models here.

@@@@@@@@@@@@@@@@@

apps.py

from django.apps import AppConfig

class Finalexamapp1Config(AppConfig): name = 'finalexamapp1'

@@@@@@@@@@@@@@@@

forms.py

from django import forms

class signupform(forms.Form): MY_CHOICES=(('student','student'), ('examiner','examiner')) username=forms.CharField(max_length=200,label="username") email=forms.EmailField(max_length=200,label="email") type= forms.ChoiceField(choices=MY_CHOICES,label="chioces") password=forms.PasswordInput() confirm_password=forms.PasswordInput()

@@@@@@@@@@@@@@@@@@@@22

models.py

from django.db import models

from django.contrib.auth.models import User
choices to as student or examiner

choices1=(('student','student'), ('examiner','examiner'), ) class UserProfile(models.Model): user=models.OneToOneField(User,on_delete="models.CASCADE") type=models.CharField(max_length=20,default='student', choices=choices1,null=True,blank=True) def str(self): return self.type

class Questions1(models.Model): questionNO = models.CharField(max_length=200) question = models.CharField(max_length=500) option1 = models.CharField(max_length=200) option2 = models.CharField(max_length=200) option3 = models.CharField(max_length=200) option4 = models.CharField(max_length=200) answer = models.CharField(max_length=200)

def __str__(self):
    return self.question

class Que_csv(models.Model): test_title=models.CharField(max_length=200) test_id=models.CharField(max_length=200) question_paper=models.FileField(max_length=200)

"""class Questionsdb1(models.Model): testid=models.IntegerField() testname=models.CharField(max_length=20) questionnumber=models.IntegerField() question=models.CharField(max_length=100) option1=models.CharField(max_length=30) option2=models.CharField(max_length=30) option3=models.CharField(max_length=30) correctans=models.CharField(max_length=30) points=models.IntegerField(default=1)

"""

@@@@@@@@@@@@@@@@@@@@@ urls.py

from django.urls import path from django.contrib.auth import views as auth_views

from . import views

from django.conf import settings from django.conf.urls.static import static
to remove ambiguity problem

app_name = 'finalexamapp1' urlpatterns = [

path('', views.home, name='home'),
path('signup/',views.signup ,name='signup'),
path('signupsave/', views.signupsave, name='signupsave'),
path('simple_upload/',views.simple_upload,name='simple_upload'),
path('upload_question_paper/', views.upload_question_paper, name='upload_question_paper'),
path('examiner_home/', views.examiner_home, name='examiner_home'),
path('save_quepaper_database/', views.save_quepaper_database,
     name='save_quepaper_database'),
path('login/', auth_views.LoginView.as_view(template_name='finalexamapp1/login.html'), name='login'),
path('logout/', auth_views.LogoutView.as_view(template_name='finalexamapp1/logout.html'), name='logout'),
path('password-reset/',
     auth_views.PasswordResetView.as_view(
         template_name='finalexamapp1/password_reset.html'
     ),
     name='password_reset'),
path('password-reset/done/',
     auth_views.PasswordResetDoneView.as_view(
         template_name='finalexamapp1/password_reset_done.html'
     ),
     name='password_reset_done'),
path('password-reset-confirm/<uidb64>/<token>/',
     auth_views.PasswordResetConfirmView.as_view(
         template_name='finalexamapp1/password_reset_confirm.html'
     ),
     name='password_reset_confirm'),
path('password-reset-complete/',
     auth_views.PasswordResetCompleteView.as_view(
         template_name='finalexamapp1/password_reset_complete.html'
     ),
     name='password_reset_complete'),

] if settings.DEBUG: urlpatterns += static(settings.MEDIA_URL, document_root=settings.MEDIA_ROOT)

@@@@@@@@@@@@@@@@@@@@@

views.py

from django.shortcuts import render

from .forms import signupform from .models import UserProfile,User,Que_csv,Questions1 from django.http import HttpResponse from django.shortcuts import render from django.conf import settings from django.core.files.storage import FileSystemStorage import pandas as pd

def home(request): post1 = Que_csv() url=Que_csv.objects.values_list('question_paper') print(url) print("ok")

excel_file ="/root/PycharmProjects/poll1/finalexam/media/aabb.xlsx"
movies = pd.read_excel(excel_file)
print( movies.head())

return render(request,'finalexamapp1/index.html')

def signup(request):

return render(request,'finalexamapp1/signup.html')

def signupsave(request):

if request.method == 'POST':
    if request.POST.get('name') and request.POST.get('email')\
            and request.POST.get('pwd'):
            post = UserProfile()
            user=User()
            user.username = request.POST.get('name')
            user.email = request.POST.get('email')
            user.password= request.POST.get('pwd')
            user.type=request.POST.get('radio1')
            print(user.type)
            user.save()

            return render(request, 'finalexamapp1/studenthome.html')

    else:
        return render(request, 'finalexamapp1/signup.html')

def logout(request): pass

def simple_upload(request): if request.method == 'POST' and request.FILES['myfile']: myfile = request.FILES['myfile'] fs = FileSystemStorage() filename = fs.save(myfile.name, myfile) uploaded_file_url = fs.url(filename) return render(request, 'finalexamapp1/simple_upload.html', { 'uploaded_file_url': uploaded_file_url }) return render(request, 'finalexamapp1/simple_upload.html')

def upload_question_paper(request): return render(request, 'finalexamapp1/upload_question_paper.html')

def save_quepaper_database(request): if request.method == 'POST' and request.FILES['myfile']: myfile = request.FILES['myfile'] #post1 = Que_csv() #url = Que_csv.objects.values_list('question_paper') #print(url) #print("ok") #fs = FileSystemStorage()

    #excel_file = "/root/PycharmProjects/poll1/finalexam/media/aabb.xlsx"
    #filename = fs.save(myfile.name, myfile)
    excel_file = myfile

    #uploaded_file_url = fs.url(filename)
    #print(uploaded_file_url)
    #excel_file = uploaded_file_url


    questions1 = pd.read_excel(excel_file)
    df = pd.DataFrame(questions1, columns=['questionNo', 'question', 'option1',
                                           'option2',
                                           'option3','option4','answer'])

    for questionNo, question, a,b,c,d ,answer in df.values:
        Questionsdb = Questions1()

        Questionsdb.questionNo=questionNo
        Questionsdb.question=question
        Questionsdb.option1=a
        Questionsdb.option2=b
        Questionsdb.option3=c
        Questionsdb.option4=d
        Questionsdb.answer=answer
        Questionsdb.save()










#fs = FileSystemStorage()
    #filename = fs.save(myfile.name, myfile)
    #uploaded_file_url = fs.url(filename)
    #return render(request, 'finalexamapp1/simple_upload.html', {
    #    'uploaded_file_url': uploaded_file_url


        #})
    return render(request,'finalexamapp1/index.html')

    def examiner_home(request): return render(request, 'finalexamapp1/examiner_home.html')

    © 2019 GitHub, Inc.
    Terms
    Privacy
    Security
    Status
    Help

